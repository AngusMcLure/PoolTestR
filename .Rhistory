out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
pkgbuild::compile_dll() # see note below
roxygen2::roxygenize()
out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
f <- function(x){exp(x)/(1 + exp(x))}
f(-10)
MM <- model.matrix(Result~Place)
MM <- model.matrix(Result~Place,data= Data)
MM
MM * matrix(rnorm(4),ncol = 1)
MM %*% matrix(rnorm(4),ncol = 1)
p <- MM %*% matrix(rnorm(4),ncol = 1)
p
plot(hist(p))
p <- f(MM %*% matrix(rnorm(4),ncol = 1))
plot(hist(p))
ps <- 1 - (1-p).^data$NumInPool
ps <- 1 - (1-p)^data$NumInPool
ps <- 1 - (1-p)^dData$NumInPool
ps <- 1 - (1-p)^Data$NumInPool
ps
plot(hist(ps))
ps <- 1 - (1-p)^Data$NumInPool
all(ps<1)
all(ps>0)
all(p>0)
all(p<1)
devtools::install("../PoolTestR/",quick=F)
out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
out
out$fit
devtools::install("../PoolTestR/",quick=T)
out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
detach("package:PoolTestR", unload = TRUE)
library(PoolTestR)
out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
detach("package:PoolTestR", unload = TRUE)
devtools::install("../PoolTestR/",quick=F)
out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
library(PoolTestR)
out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
library(PoolTestR)
Data <- data.frame(Place = sample(c("A","B","C","D"),1000, replace = T),
Date = sample(as.Date(c("2000/1/1","2001/1/1","2002/1/1")),1000, replace = T),
NumInPool = sample(1:10,1000, replace = T),
Result = sample(0:1,1000,replace = T)
)
out <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place, verbose = T)
out
out$fit
out$fit %>% View
View(out$fit)
summary(out$fit)
summarise(out$fit)
rstan::summary(out$fit)
rstan::summary(out$fit)$summary
rstan::summary(out$fit)$summary %>% calss
rstan::summary(out$fit)$summary %>% class()
library(dplyr)
rstan::summary(out$fit)$summary %>% class()
rstan::summary(out$fit)$summary %>% exp()
out2 <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place + Date, verbose = T)
MM <- model.matrix(Result~Place+Date, data = Data)
MM
MM %*% Data$Result
MM %*% matrix(rnorm(5),ncol = 1)
f <- function(x){exp(x)/(1 + exp(x))}
f(MM %*% matrix(rnorm(5),ncol = 1))
MM
MM %>% apply(2,mac)
MM %>% apply(2,max)
apply(MM,2,max)
MM - apply(MM,2,min)
MM - t(apply(MM,2,min))
apply(MM,2,min)
t(apply(MM,2,min))
apply(MM,2,min)
t(MM - apply(MM,2,min))
t(t(MM - apply(MM,2,min)))
t(t(MM) - apply(MM,2,min))
t((t(MM) - apply(MM,2,min)) * (apply(MM,2,max) - apply(MM,2,min)) )
t((t(MM) - apply(MM,2,min)) / (apply(MM,2,max) - apply(MM,2,min)) )
col(MM)
clm
NormaliseColumns <- function(matrix){
for(n in 1:ncol(matrix)){
clmn <- matrix[,n]
maxc <- max(clmn)
minc <- min(clmn)
if(maxc != minc){
matrix[,n] <- (clmn - minc)/(macx-minc)
}
}
}
NormaliseColumns(MM)
NormaliseColumns <- function(matrix){
for(n in 1:ncol(matrix)){
clmn <- matrix[,n]
maxc <- max(clmn)
minc <- min(clmn)
if(maxc != minc){
matrix[,n] <- (clmn - minc)/(maxc-minc)
}
}
}
NormaliseColumns(MM)
NormaliseColumns <- function(matrix){
for(n in 1:ncol(matrix)){
clmn <- matrix[,n]
maxc <- max(clmn)
minc <- min(clmn)
if(maxc != minc){
matrix[,n] <- (clmn - minc)/(maxc-minc)
}
}
return(matrix)
}
NormaliseColumns(MM)
NormaliseColumns <- function(matrix){
for(n in 1:ncol(matrix)){
clmn <- matrix[,n]
maxc <- max(clmn)
minc <- min(clmn)
if(maxc != minc){
matrix[,n] <- (clmn - minc)/(maxc-minc)
}else{
matrix[,n] <- 1
}
}
return(matrix)
}
NormaliseColumns(MM)
detach("package:PoolTestR", unload = TRUE)
devtools::install("../PoolTestR/",quick=T)
library(PoolTestR)
out2 <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place + Date, verbose = T)
out2
out2$fit
rstan::lookup(abs)
detach("package:PoolTestR", unload = TRUE)
devtools::install("../PoolTestR/",quick=F)
devtools::install("../PoolTestR/",quick=F)
devtools::install("../PoolTestR/",quick=F)
library(PoolTestR)
out2 <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place + Date, verbose = T)
MM <- model.matrix(Result~Place+Date, data = Data)
MM
t(MM)/apply(MM,2,function(x){max(abs(x))})
t(t(MM)/apply(MM,2,function(x){max(abs(x))}))
MM <- t(t(MM)/apply(MM,2,function(x){max(abs(x))}))
MM %*% matrix(rnorm(5),ncol = 1)
f(MM %*% matrix(rnorm(5),ncol = 1))
f(MM %*% matrix(rnorm(5),ncol = 1)) <1
all(f(MM %*% matrix(rnorm(5),ncol = 1)) <1)
all(f(MM %*% matrix(rnorm(5),ncol = 1)) >0)
all(f(MM %*% matrix(0,ncol = 1)) >0)
all(f(MM %*% matrix(rep(0,5),ncol = 1)) >0)
f(MM %*% matrix(rep(0,5),ncol = 1))
PoolTestR::stanmodels
sampling
library(rstan)
help(sampling)
detach("package:PoolTestR", unload = TRUE)
devtools::install("../PoolTestR/",quick=T)
detach("package:PoolTestR", unload = TRUE)
library(PoolTestR)
out2 <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place + Date, verbose = T)
detach("package:PoolTestR", unload = TRUE)
devtools::install("../PoolTestR/",quick=F)
library(PoolTestR)
out2 <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place + Date, verbose = T)
Data <- data.frame(Place = sample(c("A","B","C","D"),1000, replace = T),
Date = sample(as.Date(c("2000/1/1","2001/1/1","2002/1/1")),1000, replace = T),
NumInPool = sample(1:10,1000, replace = T),
Result = sample(0:1,1000,replace = T)
)
library(PoolTestR)
out2 <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place + Date, verbose = T)
detach("package:PoolTestR", unload = TRUE)
devtools::install("../PoolTestR/",quick=T)
devtools::install("../PoolTestR/",quick=F)
detach("package:PoolTestR", unload = TRUE)
Data <- data.frame(Place = sample(c("A","B","C","D"),1000, replace = T),
Date = sample(as.Date(c("2000/1/1","2001/1/1","2002/1/1")),1000, replace = T),
NumInPool = sample(1:10,1000, replace = T),
Result = sample(0:1,1000,replace = T)
)
library(PoolTestR)
out2 <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place + Date, verbose = T)
detach("package:PoolTestR", unload = TRUE)
devtools::install("../PoolTestR/",quick=F)
detach("package:PoolTestR", unload = TRUE)
Data <- data.frame(Place = sample(c("A","B","C","D"),1000, replace = T),
Date = sample(as.Date(c("2000/1/1","2001/1/1","2002/1/1")),1000, replace = T),
NumInPool = sample(1:10,1000, replace = T),
Result = sample(0:1,1000,replace = T)
)
library(PoolTestR)
out2 <- PoolTestR::PooledRegressionAlt(Data,"NumInPool",Result ~ Place + Date, verbose = T)
out2
out2$fit
out2$fit$`alpha[5]`
View(out2$fit)
attr(out2$fit,'stanmodel')
Data2 <- data.frame(Place = sample(c("A","B","C","D"),1000, replace = T),
Year = sample(c(2000,2001,2002)),1000, replace = T),
NumInPool = sample(1:10,1000, replace = T),
Result = sample(0:1,1000,replace = T)
)
Data2 <- data.frame(Place = sample(c("A","B","C","D"),1000, replace = T),
Year = sample(c(2000,2001,2002)),1000, replace = T),
NumInPool = sample(1:10,1000, replace = T),
Result = sample(0:1,1000,replace = T)
)
Data2 <- data.frame(Place = sample(c("A","B","C","D"),1000, replace = T),
Year = sample(c(2000,2001,2002),1000, replace = T),
NumInPool = sample(1:10,1000, replace = T),
Result = sample(0:1,1000,replace = T)
)
out3 <- PoolTestR::PooledRegressionAlt(Data2,"NumInPool",Result ~ Place + Date, verbose = T)
out3 <- PoolTestR::PooledRegressionAlt(Data2,"NumInPool",Result ~ Place + Year, verbose = T)
out3$fit
rstan::summary(out3$fit)
exp(rstan::summary(out3$fit))
exp(rstan::summary(out3$fit)$summary)
MM <- model.matrix(Data2,Result ~ Year)
MM <- model.matrix(Result ~ Year,data = Data)
MM <- model.matrix(Result ~ Year,data = Data2)
MM
MM %*% diag(1,1/2002)
MM %*% diag(c(1,1/2002))
detach("package:PoolTestR", unload = TRUE)
#Fake data with no trend
library(dplyr)
BasePrev <- c(A = 0.1, B = 0.5, C = 0.2, D = 0.1)
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),1000, replace = T),
Year = sample(c(2000,2001,2002),1000, replace = T),
NumInPool = sample(1:10,1000, replace = T)
)
BasePrev[DataTrend$Place]
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
DataTrend$Result <- with(DataTrend,
Place)
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*Year -200))
GrowthRate = 0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*Year -200))
DataTrend
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year -2000)))
DataTrend
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
#Fake data with no trend
N <- 1000
Data <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(2000,2001,2002),N, replace = T),
NumInPool = sample(1:10,N, replace = T),
Result = sample(0:1,N,replace = T)
)
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(2000,2001,2002),N, replace = T),
NumInPool = sample(1:10,N, replace = T)
)
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
GrowthRate = 0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year -2000)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
DataTrend
library(PoolTestR)
out <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year + Place,verbose = T)
out
out$fit
exp(summary(out$fit)$summary)
exp(rstan::summary(out$fit)$summary)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(2000,2001,2002),N, replace = T),
NumInPool = sample(5:10,N, replace = T)
)
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
GrowthRate = 0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year -2000)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
RegYearPlaceTrend <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year + Place,verbose = T)
rstan::summary(RegYearPlaceTrend$fit)$summary
rstan::summary(RegYearPlaceTrend$fit)$summary
exp(rstan::summary(RegYearPlaceTrend$fit)$summary)
attr(RegYearPlaceTrend$fit,'model')
View(RegYearPlaceTrend$fit)
attr(RegYearPlaceTrend$fit,'stanmodel')
detach("package:PoolTestR", unload = TRUE)
devtools::install("../PoolTestR/",quick=F)
remove.packages("PoolTestR")
devtools::install("../PoolTestR/",quick=F)
devtools::install("../PoolTestR/",quick=F)
library(PoolTestR)
#Fake data with no trend
N <- 1000
Data <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(2000,2001,2002),N, replace = T),
NumInPool = sample(1:10,N, replace = T),
Result = sample(0:1,N,replace = T)
)
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(2000,2001,2002),N, replace = T),
NumInPool = sample(5:10,N, replace = T)
)
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
GrowthRate = 0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year -2000)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
RegYearPlaceTrend <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year + Place,verbose = T)
RegYearPlaceTrend
exp(rstan::summary(RegYearPlaceTrend$fit)$summary)
RegYearATrend <- PooledRegressionAlt(subset(DataTrend,Place == "A"),"NumInPool",Result ~ Year,verbose = T)
RegYearATrend
RegYearATrend$fit
RegYearATrend$MM
RegYearATrend
RegYearATrend$input
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(0:2),N, replace = T),
NumInPool = sample(5:10,N, replace = T)
)
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
GrowthRate = 0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year -2000)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(0:2),N, replace = T),
NumInPool = sample(5:10,N, replace = T)
)
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
GrowthRate = 0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
exp(0.5)
RegYearATrend <- PooledRegressionAlt(subset(DataTrend,Place == "A"),"NumInPool",Result ~ Year,verbose = T)
RegYearATrend
summary(RegYearATrend$fit)
rstan::summary(RegYearATrend$fit)
rstan::summary(RegYearATrend$fit)$summary
exp(rstan::summary(RegYearATrend$fit)$summary)
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(0:2),N, replace = T),
NumInPool = sample(5:10,N, replace = T)
)
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
GrowthRate = -0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
RegYearATrend <- PooledRegressionAlt(subset(DataTrend,Place == "A"),"NumInPool",Result ~ Year,verbose = T)
RegYearATrend
exp(rstan::summary(RegYearATrend$fit)$summary)
exp(-0.5)
f(0.1)
f <- function(x){exp(x)/(1 + exp(x))}
0.1/(1-0.1)
g <- function(x){x/(1-x)}
g(0.1)
g(0.1*0.6)
g(0.1)/g(0.1*0.6)
g(0.1*0.6)/g(0.1)
g(0.1*exp(-0.5))/g(0.1)
attr(PrevsYearPlaceTrend$fit,'stanmodel')
attr(RegYearATrendTrend$fit,'stanmodel')
attr(RegYearATrend$fit,'stanmodel')
RegYearPlaceTrend <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year + Place,verbose = T)
exp(rstan::summary(RegYearPlaceTrend$fit)$summary)
RegYearATrend$input$MM
RegYearATrend$input
RegYearPlaceTrend$input
remove.packages("PoolTestR")
devtools::install("../PoolTestR/",quick=F)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
RegYearATrend <- PooledRegressionAlt(subset(DataTrend,Place == "A"),"NumInPool",Result ~ Year,verbose = T)
detach("package:PoolTestR", unload = TRUE)
remove.packages("PoolTestR")
devtools::install("../PoolTestR/",quick=T)
library(PoolTestR)
RegYearATrend <- PooledRegressionAlt(subset(DataTrend,Place == "A"),"NumInPool",Result ~ Year,verbose = T)
RegYearPlaceTrend <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year + Place,verbose = T)
exp(rstan::summary(RegYearPlaceTrend$fit)$summary)
PrevsYearPlaceTrend
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
exp(rstan::summary(RegYearATrend$fit)$summary)
RegYearBTrend <- PooledRegressionAlt(subset(DataTrend,Place == "B"),"NumInPool",Result ~ Year,verbose = T)
RegYearBTrend
exp(rstan::summary(RegYearBTrend$fit)$summary)
g
g(0.05)
ginv <- function(x){x/1+q}
ginv(5.551132e-02)
ginv <- function(x){x/1+x}
ginv(5.551132e-02)
ginv <- function(x){x/(1+x)}
ginv(5.551132e-02)
g
RegPlace <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Place,verbose = T)
RegPlace
RegPlace$fit
exp(rstan::summary(RegPlace$fit)$summary)
model.matrix(Result~Year*Place, data = DataTrend)
RegFull <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year*Place,verbose = T)
RegFull
exp(rstan::summary(RegFull$fit)$summary)
RegFull <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Place*Year,verbose = T)
RegFull
exp(rstan::summary(RegFull$fit)$summary)
a ~ b*c
model.matrix(Result~(Year+Place)^2, data = DataTrend)
model.matrix(Result~(Year+Place)^3, data = DataTrend)
RegYearPlaceTrend$input$MM
BasePrev <- c(A = 0.05, B = 0.05, C = 0.05, D = 0.05)
GrowthRate = -0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
#Fake data with no trend
N <- 5000
Data <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(2000,2001,2002),N, replace = T),
NumInPool = sample(1:10,N, replace = T),
Result = sample(0:1,N,replace = T)
)
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(0:2), N, replace = T),
NumInPool = sample(5:10, N, replace = T)
)
BasePrev <- c(A = 0.05, B = 0.05, C = 0.05, D = 0.05)
GrowthRate = -0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
RegYearPlaceTrend <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year + Place,verbose = T)
RegYearPlaceTrend
exp(rstan::summary(RegYearPlaceTrend$fit)$summary)
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(2000:2002), N, replace = T),
NumInPool = sample(5:10, N, replace = T)
)
BasePrev <- c(A = 0.05, B = 0.05, C = 0.05, D = 0.05)
GrowthRate = -0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
RegYearPlaceTrend <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year + Place,verbose = T)
exp(rstan::summary(RegYearPlaceTrend$fit)$summary)
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
GrowthRate = -0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
DataTrend <- data.frame(Place = sample(c("A","B","C","D"),N, replace = T),
Year = sample(c(2000:2002), N, replace = T),
NumInPool = sample(5:10, N, replace = T)
)
BasePrev <- c(A = 0.1, B = 0.05, C = 0.02, D = 0.1)
GrowthRate = -0.5
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year)))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
DataTrend$Result
DataTrend$TruePrev <- with(DataTrend,
BasePrev[Place] * exp(GrowthRate*(Year-min(Year))))
DataTrend$Result <- with(DataTrend,
runif(N) < 1-(1-TruePrev)^NumInPool)
PrevsYearPlaceTrend <- PoolPrev(DataTrend,Result,NumInPool,Place,Year)
PrevsYearPlaceTrend
RegYearPlaceTrend <- PooledRegressionAlt(DataTrend,"NumInPool",Result ~ Year + Place,verbose = T)
RegYearPlaceTrend
exp(rstan::summary(RegYearPlaceTrend$fit)$summary)
