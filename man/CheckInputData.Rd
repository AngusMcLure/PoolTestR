% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CheckInputData.R
\name{CheckInputData}
\alias{CheckInputData}
\title{Checking input data for errors and inconsistencies}
\usage{
CheckInputData(data, result, poolSize, ...)
}
\arguments{
\item{data}{A \code{data.frame} with one row for each pooled sampled and
columns for the size of the pool (i.e., the number of specimens / isolates /
insects pooled to make that particular pool), the result of the test of the
pool. It may also contain additional columns with additional information
(e.g. location where pool was taken) which can optionally be used for
stratifying the data into smaller groups and calculating prevalence by
group (e.g. calculating prevalence for each location).}

\item{result}{The name of column with the result of each test on each pooled
sample. The result must be stored with 1 indicating a positive test result
and 0 indicating a negative test result.}

\item{poolSize}{The name of the column with number of
specimens/isolates/insects in each pool.}

\item{...}{Optional name(s) of columns with variables to stratify the data
by.}
}
\value{
Returns \code{data} invisibly, using \code{invisible(x)}

This function is used to check the input \code{data} for formatting
problems including:
  \itemize{
    \item{Incorrect class of the input \code{data} }
    \item{incorrect class of \code{result} and \code{poolSize} columns}
    \item{Missing columns}
    \item{Missing values in rows}
    \item{Invalid values in rows}
  }
If any problems are detected, an error or warning will be raised describing
the issue.
}
\description{
Test the input data is adequately formatted for use with \code{PoolPrev()} and 
\code{HierPoolPrev()}.
}
\examples{
# Check whether the SimpleExampleData is formatted 
# appropriately for estimating prevalence in 
# PoolTestR
SimpleExample_output <- 
  CheckInputData(
    data = SimpleExampleData, 
    result = "Result", poolSize = "NumInPool"
  )
# No errors/warnings were raised
identical(SimpleExample_output, SimpleExampleData)
# The hierarchical scheme is formatted properly so
# the output is identical to the input


\dontrun{
  # Error raised when input data is not class data.frame
  CheckInputData(
    data = 1, 
    result = "Result", poolSize = "NumInPool"
  )
  # Error raised when result/poolSize column names are incorrect
  CheckInputData(
    data = SimpleExampleData, 
    result = "WrongResultName", poolSize = "WrongNumInPoolName"
  )
  # Error raised when optional stratifying variable column names are incorrect
  CheckInputData(
    data = SimpleExampleData, 
    result = "Result", poolSize = "NumInPool",
    "WrongRegionName", "WrongYearName"
  )
  # Error raised when Result/poolSize columns are not numeric/integer
  CheckInputData(
    data = SimpleExampleData \%>\%
      mutate(Result = as.character(.data$Result),
             .keep = "all"), 
    result = "Result", poolSize = "NumInPool"
  )
  CheckInputData(
    data = SimpleExampleData \%>\%
      mutate(NumInPool = as.character(.data$NumInPool),
             .keep = "all"), 
    result = "Result", poolSize = "NumInPool"
  )
  # Error raised when Result column values are not numeric 0 and 1
  CheckInputData(
    data = SimpleExampleData \%>\%
      mutate(Result = 2,
             .keep = "all"), 
    result = "Result", poolSize = "NumInPool"
  )
  # Error raised when poolSize column values are not positive
  CheckInputData(
    data = SimpleExampleData \%>\%
      mutate(NumInPool = (-1*.data$NumInPool),
             .keep = "all"), 
    result = "Result", poolSize = "NumInPool"
  )
}

}
\seealso{
\code{\link{PrepareClusterData}}, \code{\link{SimpleExampleData}},
\code{\link{PoolPrev}}, \code{\link{HierPoolPrev}}
}
