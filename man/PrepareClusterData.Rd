% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CheckInputData.R
\name{PrepareClusterData}
\alias{PrepareClusterData}
\title{Prepare hierarchical/clustered survey data for analysis}
\usage{
PrepareClusterData(data, result, poolSize, hierarchy = NULL)
}
\arguments{
\item{data}{A \code{data.frame} with one row for each pooled sampled and
columns for the size of the pool (i.e. the number of specimens / isolates /
insects pooled to make that particular pool), the result of the test of the
pool. It may also contain additional columns with additional information
(e.g. location where pool was taken) which can optionally be used for
stratifying the data into smaller groups and calculating prevalence by
group (e.g. calculating prevalence for each location)}

\item{result}{The name of column with the result of each test on each pooled
sample. The result must be stored with 1 indicating a positive test result
and 0 indicating a negative test result.}

\item{poolSize}{The name of the column with number of
specimens/isolates/insects in each pool}

\item{hierarchy}{The name of column(s) indicating the group membership, 
ordered from largest to smallest.}
}
\value{
An object of class \code{data.frame}, identical to the input 
\code{data}. If there were issues with nesting inside the hierarchy, the 
output will have a single additional column \code{PoolTestR_ID}, containing 
unique identifier for each location in the survey (created by concatenating
the hierarchy column values within each row).

Functions in PoolTools do not make assumptions about the number of levels 
present or the names of hierarchical columns. They can be applied in any
cases where a hierarchical sampling frame is involved.
}
\description{
Helper function to prepare data for analysis with \code{HierPoolPrev()}.
}
\details{
In a nested sampling design with multiple levels of grouping, the 
lower-level groups must have names/numbers that differentiate them from all 
other groups at the same level. E.g. If sampling was performed at 200 sites 
across 10 villages (20 site per village), then there should be 200 unique 
names for the sites. If, for instance, the sites are instead numbered 1 to 
20 within each village, the village identifier (e.g. A, B, C...) should be 
combined with the site number to create unique identifiers for each site 
(e.g. A-1, A-2... for sites in village A and B-1, B-2... for the sites in 
village B etc.). 

This function checks that the nesting is adequate. If there are issues with 
the nesting, a new column is added to the input \code{data} by concatenating 
all columns within the input \code{hierarchy} to ensure each location has a 
unique identifier. 

This function can also be used to check levels of the hierarchical/clustering 
scheme that will not be included in prevalence estimates. For example,
the SimpleExampleData has the scheme \code{Region} > \code{Village} > 
\code{Site}. The full hierarchy/clustering scheme can be tested using
\code{hierarchy = c("Region", "Village", "Site")}. The function can also be 
used to check only the levels of the hierarchical/clustering scheme that will 
be used for prevalence estimates, e.g., if planning to stratify by 
\code{Region}, the hierarchy in the \code{HierPoolPrev()} call will be 
\code{hierarchy = c("Village", "Site")}.
}
\examples{
# Check whether the SimpleExampleData is formatted 
# appropriately for estimating prevalence in 
# HierPoolPrev()
SimpleExample_output <- PrepareClusterData(
  data = SimpleExampleData, 
  result = "Result", poolSize = "NumInPool", 
  hierarchy = c("Region", "Village", "Site") 
)
# No errors/warnings were raised
identical(SimpleExample_output, SimpleExampleData)
# The hierarchical scheme is formatted properly so
# the output is identical to the input


\dontrun{
  # Checking another example data set for clustering issues
  # Create a test data frame that has incorrectly nested 
  # Village and Site variables
  check_data <- data.frame(
    Region = rep(c("A", "B"), each = 4),
    Village = rep(rep(c("W", "X"), each = 2), 2),
    Site = c(1:4, 4:1),
    Year = rep(0, 8),
    NumInPool = rep(10, 8),
    Result = c(rep(0, 8))
  )
  # Test whether the data.frame is formatted appropriately
  # for HierPoolPrev()
  check_output <- PrepareClusterData(
    data = check_data, 
    result = "Result", poolSize = "NumInPool", 
    hierarchy = c("Region", "Village", "Site")
  )
  # New column has been added with unique identifier for
  # each location
  check_output$PoolTestR_ID
}

}
\seealso{
\code{\link{HierPoolPrev}}, \code{\link{getPrevalence}}, \code{\link{SimpleExampleData}}
}
